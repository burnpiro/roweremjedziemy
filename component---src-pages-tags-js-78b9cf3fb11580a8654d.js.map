{"version":3,"sources":["webpack:///./src/pages/tags.js"],"names":["TagIndex","data","siteTitle","site","siteMetadata","title","tags","allMarkdownRemark","distinct","className","length","map","tag","key","style","textDecoration","to","props","query","render"],"mappings":"qHAAA,oEAUMA,GAVN,oBAUiB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACZC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAOL,EAAKM,kBAAkBC,SAEpC,OACE,kBAAC,IAAD,CAAQH,MAAOH,GACb,kBAAC,IAAD,CACEG,MAAM,SAER,4BAAQI,UAAU,iBACd,wBAAIA,UAAU,mBAAd,SAAuCH,EAAKI,OAA5C,MAEJ,yBAAKD,UAAU,iBACZH,EAAKK,KAAK,SAAAC,GACT,OACI,kBAAC,OAAD,CACAC,IAAKD,EACLE,MAAO,CAAEC,eAAgB,QACzBC,GAAE,SAAWJ,GAEb,yBAAKH,UAAU,YAAf,IAA4BG,WAsB3B,mBAAAK,GAAK,OAClB,kBAAC,cAAD,CACEC,MAfY,WAgBZC,OAAQ,SAAAlB,GAAI,OACV,kBAACD,EAAD,CAAUiB,OAAK,EAAChB,KAAMA","file":"component---src-pages-tags-js-78b9cf3fb11580a8654d.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\";\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport \"../style/normalize.css\"\nimport \"../style/all.scss\"\n\nconst TagIndex = ({ data }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const tags = data.allMarkdownRemark.distinct\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO\n        title=\"Tagi\"\n      />\n      <header className=\"tag-page-head\">\n          <h1 className=\"page-head-title\">Tagi ({tags.length})</h1>\n      </header>\n      <div className=\"tag-container\">\n        {tags.map( tag => {\n          return(\n              <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${tag}`}\n              >\n              <div className=\"tag-item\">#{tag}</div>\n              </Link>\n            )\n          })}\n        </div>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark {\n      distinct(field: frontmatter___tags)\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <TagIndex props data={data} />\n    )}\n  />\n)\n"],"sourceRoot":""}