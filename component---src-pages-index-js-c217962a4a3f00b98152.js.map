{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/Tag.js","webpack:///./src/components/PostCard.js"],"names":["BlogIndex","location","data","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","postCounter","keywords","description","className","fluid","logo","childImageSharp","map","node","key","fields","slug","count","postClass","props","query","render","Tags","tags","this","tag","to","Component","ContentNoImage","frontmatter","thumbnail","Tag","date","excerpt","ContentWithImage"],"mappings":"oHAAA,qGAYMA,GAZN,oBAYkB,SAAC,EAAUC,GAAc,IAAtBC,EAAqB,EAArBA,KACbC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAQL,EAAKM,kBAAkBC,MACjCC,EAAc,EAElB,OACE,kBAAC,IAAD,CAAQJ,MAAOH,GACb,kBAAC,IAAD,CACEG,MAAM,0BACNK,SAAU,CAAC,OAAD,4CAGXT,EAAKE,KAAKC,aAAaO,aACtB,4BAAQC,UAAU,aAChB,wBAAIA,UAAU,mBACZ,kBAAC,IAAD,CACEC,MAAOZ,EAAKa,KAAKC,gBAAgBF,MACjCD,UAAU,aAEXX,EAAKE,KAAKC,aAAaO,cAI9B,yBAAKC,UAAU,aACZN,EAAMU,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAEZ,OADAR,IAEE,kBAAC,IAAD,CACES,IAAKD,EAAKE,OAAOC,KACjBC,MAAOZ,EACPQ,KAAMA,EACNK,UAAS,gBAoDR,mBAAAC,GAAK,OAClB,kBAAC,cAAD,CACEC,MA7CY,aA8CZC,OAAQ,SAAAxB,GAAI,OACV,kBAACF,EAAD,eAAWC,SAAUuB,EAAMvB,SAAUuB,OAAK,EAACtB,KAAMA,GAAUsB,S,mFC1ElDG,E,kGArBbD,OAAA,WAAU,IACAE,EAASC,KAAKL,MAAdI,KACR,OACE,yBAAKf,UAAU,kBACZe,GACCA,EAAKX,KAAI,SAAAa,GAAG,OACV,0BAAMX,IAAKW,GACX,kBAAC,OAAD,CAAMjB,UAAU,qBAChBM,IAAKW,EAELC,GAAE,SAAWD,GAHb,IAKEA,GAED,U,GAfME,a,qBCgBbC,GAdS,aAAAT,GAAK,OAClB,6BACEX,UAAS,cAAeW,EAAMF,MAAQ,GAAM,GAApB,mBAAf,IACPE,EAAMD,UADC,KAELC,EAAMN,KAAKgB,YAAYC,UAAvB,0BAGAX,EAAMN,KAAKgB,YAAYC,UACnB,kBAAC,EAAD,CAAkBX,MAAOA,IACzB,kBAAC,EAAD,CAAgBA,MAAOA,M,kGAMjCE,OAAA,WAAU,IACFF,EAAOK,KAAKL,MAAZA,MACN,OACE,yBAAKX,UAAU,qBACb,6BACA,kBAACuB,EAAD,CAAMR,KAAMJ,EAAMN,KAAKgB,YAAYN,QAEnC,6BACA,kBAAC,OAAD,CAAMG,GAAIP,EAAMN,KAAKE,OAAOC,KAAMR,UAAU,kBAC1C,wBAAIA,UAAU,mBACXW,EAAMN,KAAKgB,YAAY5B,OAASkB,EAAMN,KAAKE,OAAOC,QAIvD,yBAAKR,UAAU,kBACdW,EAAMN,KAAKgB,YAAYG,MAExB,yBAAKxB,UAAU,kBACdW,EAAMN,KAAKgB,YAAYtB,aAAeY,EAAMN,KAAKoB,SAElD,6BACA,kBAAC,OAAD,CAAMP,GAAIP,EAAMN,KAAKE,OAAOC,KAAMR,UAAU,qCAExCW,EAAMN,KAAKgB,YAAYtB,aAAeY,EAAMN,KAAKoB,QAC7C,YACA,S,GA1BaN,cAmCvBO,E,kGACJb,OAAA,WAAU,IACFF,EAAOK,KAAKL,MAAZA,MACN,OACE,kBAAC,OAAD,CAAMO,GAAIP,EAAMN,KAAKE,OAAOC,KAAMR,UAAU,kBAC1C,kBAAC,IAAD,CACEC,MAAOU,EAAMN,KAAKgB,YAAYC,UAAUnB,gBAAgBF,MACxDD,UAAU,oBAEZ,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,mBACXW,EAAMN,KAAKgB,YAAY5B,OAASkB,EAAMN,KAAKE,OAAOC,MAGrD,yBAAKR,UAAU,kBACZW,EAAMN,KAAKgB,YAAYG,MAE1B,yBAAKxB,UAAU,kBACZW,EAAMN,KAAKgB,YAAYtB,aAAeY,EAAMN,KAAKoB,Y,GAlB/BN","file":"component---src-pages-index-js-c217962a4a3f00b98152.js","sourcesContent":["import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\nimport Img from \"gatsby-image/index\";\n\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/Seo\"\n// import Bio from \"../components/bio\"\nimport PostCard from \"../components/PostCard\"\n\nimport \"../style/normalize.css\"\nimport \"../style/all.scss\"\n//TODO: switch to staticQuery, get rid of comments, remove unnecessary components, export as draft template\nconst BlogIndex = ({ data }, location) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n  let postCounter = 0\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO\n        title=\"Rowerem jedziemy | blog\"\n        keywords={[`blog`, `rower`, `zwiedzanie`, `podróże`, `wyprawy`]}\n      />\n      {/* <Bio /> */}\n      {data.site.siteMetadata.description && (\n        <header className=\"page-head\">\n          <h2 className=\"page-head-title\">\n            <Img\n              fluid={data.logo.childImageSharp.fluid}\n              className=\"kg-image\"\n            />\n            {data.site.siteMetadata.description}\n          </h2>\n        </header>\n      )}\n      <div className=\"post-feed\">\n        {posts.map(({ node }) => {\n          postCounter++\n          return (\n            <PostCard\n              key={node.fields.slug}\n              count={postCounter}\n              node={node}\n              postClass={`post`}\n            />\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    logo: file(\n      relativePath: { eq: \"logo_large.png\" }\n    ) {\n      childImageSharp {\n        fluid(maxWidth: 1360) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM D, YYYY\")\n            title\n            description\n            tags\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <BlogIndex location={props.location} props data={data} {...props} />\n    )}\n  />\n)\n","import React, { Component } from \"react\";\nimport { Link } from \"gatsby\";\n\nclass Tags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"post-card-tags\">\n        {tags &&\n          tags.map(tag => (\n            <span key={tag}>\n            <Link className=\"post-card-tag-link\"\n            key={tag}\n            // style={{ textDecoration: \"none\" }}\n            to={`/tags/${tag}`}\n            >\n            #{tag}\n            </Link>\n            {\" \"}</span>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default Tags;","import React, { Component } from \"react\";\nimport { Link } from \"gatsby\"\nimport Tags from \"./Tag\"\nimport Img from \"gatsby-image\";\n\nexport default props => (\n  <article\n    className={`post-card ${props.count % 3 === 0 && `post-card-large`} ${\n      props.postClass\n    } ${props.node.frontmatter.thumbnail ? `with-image` : `no-image`}`}\n  >\n      {\n        props.node.frontmatter.thumbnail\n          ?(<ContentWithImage props={props}/>)\n          :(<ContentNoImage props={props}/>)\n      }\n  </article>\n)\n\nclass ContentNoImage extends Component {\n  render() {\n    const{props}=this.props;\n    return (\n      <div className=\"post-card-content\">\n        <div>\n        <Tags tags={props.node.frontmatter.tags}/>\n        </div>\n        <div>\n        <Link to={props.node.fields.slug} className=\"post-card-link\">\n          <h2 className=\"post-card-title\">\n            {props.node.frontmatter.title || props.node.fields.slug}\n          </h2>\n        </Link>\n        </div>\n        <div className=\"post-card-date\">\n        {props.node.frontmatter.date}\n        </div>\n        <div className=\"post-card-body\">\n        {props.node.frontmatter.description || props.node.excerpt}\n        </div>\n        <div>\n        <Link to={props.node.fields.slug} className=\"post-card-link post-card-readmore\">\n          {\n            props.node.frontmatter.description || props.node.excerpt\n              ?(\"Read more\")\n              :(null)\n          }\n        </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass ContentWithImage extends Component {\n  render() {\n    const{props}=this.props;\n    return (\n      <Link to={props.node.fields.slug} className=\"post-card-link\">\n        <Img\n          fluid={props.node.frontmatter.thumbnail.childImageSharp.fluid}\n          className=\"post-card-image\"\n        />\n        <div className=\"post-card-content\">\n          <h2 className=\"post-card-title\">\n            {props.node.frontmatter.title || props.node.fields.slug}\n          </h2>\n\n          <div className=\"post-card-date\">\n            {props.node.frontmatter.date}\n          </div>\n          <div className=\"post-card-body\">\n            {props.node.frontmatter.description || props.node.excerpt}\n          </div>\n        </div>\n      </Link>\n    );\n  }\n}"],"sourceRoot":""}